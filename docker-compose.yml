version: '3.8'

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    env_file:
      - config.env
    environment:
      - FLASK_APP=wsgi.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DEVELOPMENT_DATABASE=${DEVELOPMENT_DATABASE}
      - SESSION_REDIS=${SESSION_REDIS}
      - RQ_REDIS_URL=${SESSION_REDIS}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_PORT=587
      - MAIL_USE_TLS=True
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - .:/app
      - ./webapp/static:/app/webapp/static
    depends_on:
      - db
      - redis
    networks:
      - flaskthree_network
    command: >
      sh -c "pip install -r requirements.txt &&
             flask create-database &&
             flask create-roles &&
             flask create-admin &&
             flask run --host=0.0.0.0 --port=5001"

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - config.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    networks:
      - flaskthree_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - flaskthree_network

volumes:
  postgres_data:
  redis_data:

networks:
  flaskthree_network:
    driver: bridge 